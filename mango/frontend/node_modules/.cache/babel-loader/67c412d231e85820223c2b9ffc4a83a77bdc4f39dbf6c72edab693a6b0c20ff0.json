{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\nconst useAuth = () => {\n  _s();\n  const [curr, setCurr] = useState(null);\n  const [whichUser, setWhichUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = Cookies.get(\"jwt\");\n      if (token) {\n        try {\n          const response = await fetch(\"http://localhost:5000/decode\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              token\n            })\n          });\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n          const data = await response.json();\n          setCurr(data.decoded.user);\n          setWhichUser(data.decoded.flag);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  return {\n    curr,\n    whichUser,\n    loading,\n    setCurr,\n    setWhichUser\n  };\n};\n_s(useAuth, \"GGt5u/aZ1mJtMxDDnP7DbhDzGM0=\");\nexport default useAuth;","map":{"version":3,"names":["useState","useEffect","Cookies","useAuth","_s","curr","setCurr","whichUser","setWhichUser","loading","setLoading","fetchData","token","get","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","decoded","user","flag","error","console"],"sources":["C:/Users/Aditya bhardwaj/Downloads/Freelancing-Website-main (1)/Freelancing-Website-main/mango/frontend/src/useauth.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Cookies from \"js-cookie\";\n\nconst useAuth = () => {\n  const [curr, setCurr] = useState(null);\n  const [whichUser, setWhichUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = Cookies.get(\"jwt\");\n      if (token) {\n        try {\n          const response = await fetch(\"http://localhost:5000/decode\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ token }),\n          });\n\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n\n          const data = await response.json();\n          setCurr(data.decoded.user);\n          setWhichUser(data.decoded.flag);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      }\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  return { curr, whichUser, loading, setCurr, setWhichUser };\n};\n\nexport default useAuth;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGV,OAAO,CAACW,GAAG,CAAC,KAAK,CAAC;MAChC,IAAID,KAAK,EAAE;QACT,IAAI;UACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;YAC3DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAER;YAAM,CAAC;UAChC,CAAC,CAAC;UAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;UAChD;UAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UAClClB,OAAO,CAACiB,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;UAC1BlB,YAAY,CAACe,IAAI,CAACE,OAAO,CAACE,IAAI,CAAC;QACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;MACF;MACAlB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEN,IAAI;IAAEE,SAAS;IAAEE,OAAO;IAAEH,OAAO;IAAEE;EAAa,CAAC;AAC5D,CAAC;AAACJ,EAAA,CApCID,OAAO;AAsCb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}